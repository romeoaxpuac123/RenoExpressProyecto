//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServiciosRenoExpress.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class RenoExpressDBEntities : DbContext
    {
        public RenoExpressDBEntities()
            : base("name=RenoExpressDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Cliente> Cliente { get; set; }
        public virtual DbSet<Compra> Compra { get; set; }
        public virtual DbSet<Detalle_Compra> Detalle_Compra { get; set; }
        public virtual DbSet<Factura> Factura { get; set; }
        public virtual DbSet<Producto> Producto { get; set; }
        public virtual DbSet<Producto_Sucursal> Producto_Sucursal { get; set; }
        public virtual DbSet<Proveedor> Proveedor { get; set; }
        public virtual DbSet<Sucursal> Sucursal { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<Venta> Venta { get; set; }
    
        public virtual ObjectResult<Nullable<int>> CrearCompra(Nullable<int> total, Nullable<System.DateTime> fecha)
        {
            var totalParameter = total.HasValue ?
                new ObjectParameter("Total", total) :
                new ObjectParameter("Total", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("CrearCompra", totalParameter, fechaParameter);
        }
    
        public virtual int RegistrarDetalleCompra(Nullable<int> codigo_Compra, Nullable<int> codigo_Producto, Nullable<int> codigo_Sucursal, Nullable<int> cantidad, Nullable<int> ultima_Cantidad, Nullable<System.DateTime> fecha_Adquisicion)
        {
            var codigo_CompraParameter = codigo_Compra.HasValue ?
                new ObjectParameter("Codigo_Compra", codigo_Compra) :
                new ObjectParameter("Codigo_Compra", typeof(int));
    
            var codigo_ProductoParameter = codigo_Producto.HasValue ?
                new ObjectParameter("Codigo_Producto", codigo_Producto) :
                new ObjectParameter("Codigo_Producto", typeof(int));
    
            var codigo_SucursalParameter = codigo_Sucursal.HasValue ?
                new ObjectParameter("Codigo_Sucursal", codigo_Sucursal) :
                new ObjectParameter("Codigo_Sucursal", typeof(int));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("Cantidad", cantidad) :
                new ObjectParameter("Cantidad", typeof(int));
    
            var ultima_CantidadParameter = ultima_Cantidad.HasValue ?
                new ObjectParameter("Ultima_Cantidad", ultima_Cantidad) :
                new ObjectParameter("Ultima_Cantidad", typeof(int));
    
            var fecha_AdquisicionParameter = fecha_Adquisicion.HasValue ?
                new ObjectParameter("Fecha_Adquisicion", fecha_Adquisicion) :
                new ObjectParameter("Fecha_Adquisicion", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RegistrarDetalleCompra", codigo_CompraParameter, codigo_ProductoParameter, codigo_SucursalParameter, cantidadParameter, ultima_CantidadParameter, fecha_AdquisicionParameter);
        }
    
        public virtual int TotalCompra(Nullable<int> codigo_Compra, Nullable<int> codigo_Producto, Nullable<int> cantidad)
        {
            var codigo_CompraParameter = codigo_Compra.HasValue ?
                new ObjectParameter("Codigo_Compra", codigo_Compra) :
                new ObjectParameter("Codigo_Compra", typeof(int));
    
            var codigo_ProductoParameter = codigo_Producto.HasValue ?
                new ObjectParameter("Codigo_Producto", codigo_Producto) :
                new ObjectParameter("Codigo_Producto", typeof(int));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("Cantidad", cantidad) :
                new ObjectParameter("Cantidad", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TotalCompra", codigo_CompraParameter, codigo_ProductoParameter, cantidadParameter);
        }
    }
}
